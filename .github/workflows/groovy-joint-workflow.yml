name: "Groovy Joint Validation Build"
on:
  push:
    branches:
      - '[5-9]+.[0-9]+.x'
  pull_request:
    branches:
      - '[5-9]+.[0-9]+.x'
  workflow_dispatch:
permissions:
  contents: read
jobs:
  get_groovy_snapshot_version:
    runs-on: ubuntu-latest
    outputs:
      groovySnapshotVersion: ${{ steps.groovy_snapshot_version.outputs.value }}
    steps:
      - name: Checkout project to fetch which Groovy major version it uses
        uses: actions/checkout@v4
        with:
          sparse-checkout-cone-mode: false
          sparse-checkout: gradle/libs.versions.toml
      - name: Select Groovy Branch to checkout
        id: groovy_branch
        run: |
          PROJECT_GROOVY_VERSION=$(grep -m 1 groovy gradle/libs.versions.toml | cut -d\= -f2 | tr -d "[:space:]'\"")
          MAJOR_VERSION=$(echo $PROJECT_GROOVY_VERSION | cut -d'.' -f1)
          MINOR_VERSION=$(echo $PROJECT_GROOVY_VERSION | cut -d'.' -f2)
          BRANCH="GROOVY_${MAJOR_VERSION}_${MINOR_VERSION}_X"
          echo "Project uses Groovy $PROJECT_GROOVY_VERSION"
          echo "value=$BRANCH" >> $GITHUB_OUTPUT
          rm -rf gradle
      - name: Checkout Groovy Snapshot
        run: |
          BRANCH=${{ steps.groovy_branch.outputs.value }}
          echo "Checking out Groovy branch $BRANCH"
          cd .. && git clone --depth 1 https://github.com/apache/groovy.git -b $BRANCH --single-branch
      - name: Set Groovy Snapshot version for project build
        id: groovy_snapshot_version
        run: |
          cd ../groovy
          GROOVY_SNAPSHOT_VERSION=$(cat gradle.properties | grep groovyVersion | cut -d\= -f2 |  tr -d "[:space:]")
          echo "value=$GROOVY_SNAPSHOT_VERSION" >> $GITHUB_OUTPUT

  build_project:
    needs: [get_groovy_snapshot_version]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with: { java-version: 11, distribution: temurin }
      - uses: gradle/actions/setup-gradle@v3
        env:
          GROOVY_VERSION: ${{ needs.get_groovy_snapshot_version.outputs.groovySnapshotVersion }}
          CI_GROOVY_VERSION: ${{ needs.get_groovy_snapshot_version.outputs.groovySnapshotVersion }}
          ORG_GRADLE_PROJECT_groovyVersion: ${{ needs.get_groovy_snapshot_version.outputs.groovySnapshotVersion }}
          GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
          GRADLE_ENTERPRISE_BUILD_CACHE_NODE_USER: ${{ secrets.GRADLE_ENTERPRISE_BUILD_CACHE_NODE_USER }}
          GRADLE_ENTERPRISE_BUILD_CACHE_NODE_KEY: ${{ secrets.GRADLE_ENTERPRISE_BUILD_CACHE_NODE_KEY }}
        with:
          arguments: |
            build 
            -x groovydoc