pluginManagement {
    repositories {
        maven { url 'https://repo.grails.org/grails/core' }
        gradlePluginPortal()
    }
    plugins {
        id 'org.grails.grails-web' version "$grailsVersion"
        id 'org.grails.plugins.views-json' version "$viewsVersion"
    }
}

plugins {
    id "com.gradle.enterprise" version "3.15.1"
    id 'com.gradle.common-custom-user-data-gradle-plugin' version '1.12.1'
}

gradleEnterprise {
    server = 'https://ge.grails.org'
    buildScan {
//        publishAlwaysIf(System.getenv('CI') == 'true' )
        publishAlways()
        publishIfAuthenticated()
        uploadInBackground = System.getenv("CI") == null
        capture {
            taskInputFiles = true
        }
    }
}

buildCache {
    local { enabled = System.getenv('CI') != 'true' }
    remote(HttpBuildCache) {
        push = System.getenv('CI') == 'true'
        enabled = true
        url = 'https://ge.grails.org/cache/'
        credentials {
            username = System.getenv('GRADLE_ENTERPRISE_BUILD_CACHE_NODE_USER')
            password = System.getenv('GRADLE_ENTERPRISE_BUILD_CACHE_NODE_KEY')
        }
    }}


rootProject.name = 'grails-async'

include 'grails-async-core'
include 'grails-async-gpars'
include 'grails-async-rxjava'
include 'grails-async-rxjava2'
include 'grails-events-core'
include 'grails-events-transform'
include 'grails-events-gpars'
include 'grails-events-spring'
include 'grails-events-rxjava'
include 'grails-events-rxjava2'
include 'grails-plugin-async'
include 'grails-plugin-events'

// examples
include 'examples-pubsub-demo'
project(':examples-pubsub-demo').projectDir = new File(settingsDir, 'examples/pubsub-demo')
